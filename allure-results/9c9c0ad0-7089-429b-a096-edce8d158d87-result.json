{"name": "testtest", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n0   chromedriver                        0x00000001048bad68 chromedriver + 4337000\n1   chromedriver                        0x00000001048b2de4 chromedriver + 4304356\n2   chromedriver                        0x00000001044dfa5c chromedriver + 293468\n3   chromedriver                        0x0000000104524d50 chromedriver + 576848\n4   chromedriver                        0x000000010455f908 chromedriver + 817416\n5   chromedriver                        0x0000000104518a5c chromedriver + 526940\n6   chromedriver                        0x0000000104519908 chromedriver + 530696\n7   chromedriver                        0x0000000104880db4 chromedriver + 4099508\n8   chromedriver                        0x0000000104885270 chromedriver + 4117104\n9   chromedriver                        0x000000010488b4fc chromedriver + 4142332\n10  chromedriver                        0x0000000104885d70 chromedriver + 4119920\n11  chromedriver                        0x000000010485da44 chromedriver + 3955268\n12  chromedriver                        0x00000001048a2a18 chromedriver + 4237848\n13  chromedriver                        0x00000001048a2b94 chromedriver + 4238228\n14  chromedriver                        0x00000001048b2a5c chromedriver + 4303452\n15  libsystem_pthread.dylib             0x000000018f06b034 _pthread_start + 136\n16  libsystem_pthread.dylib             0x000000018f065e3c thread_start + 8", "trace": "driver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"d485751e4639dfee0872f81c70f3130d\")>\n\n    @allure.step(\"Open the test\")\n    def testtest(driver):\n    \n        driver.maximize_window()\n        driver.get(\"https://magento.softwaretestingboard.com/\")\n    \n        click_sign = WebDriverWait(driver, 10).until(\n            EC.element_to_be_clickable((By.XPATH, SIGN_BUTTON))\n        )\n        click_sign.click()\n    \n        input_email_sign = WebDriverWait(driver, 10).until(\n            EC.presence_of_element_located((By.XPATH, SIGN_EMAIL_FORM))\n        )\n    \n        input_email_sign.send_keys(\"nugrah@yopmail.com\")\n    \n        input_pass_sign = WebDriverWait(driver, 10).until(\n            EC.presence_of_element_located((By.XPATH, PASS))\n        )\n    \n        input_pass_sign.send_keys(\"Test1234\")\n    \n        click_sign_button = WebDriverWait(driver, 10).until(\n            EC.element_to_be_clickable((By.XPATH, SUBMIT_SIGN))\n        )\n        click_sign_button.click()\n    \n        element = WebDriverWait(driver, 10).until(\n            EC.element_to_be_clickable((By.XPATH, WOMEN_BUTTON))\n        )\n        element.click()\n    \n        # Repeat the product selection and add-to-cart steps for WIDGET_PRODUCT_1, WIDGET_PRODUCT_2, and WIDGET_PRODUCT_3\n        for product_xpath in [WIDGET_PRODUCT_1, WIDGET_PRODUCT_2, WIDGET_PRODUCT_3]:\n            product = WebDriverWait(driver, 10).until(\n                EC.element_to_be_clickable((By.XPATH, product_xpath))\n            )\n            product.click()\n    \n            select_size = WebDriverWait(driver, 10).until(\n                EC.element_to_be_clickable((By.XPATH, SIZE_BUTTON_XS))\n            )\n            select_size.click()\n    \n            select_color = WebDriverWait(driver, 10).until(\n                EC.element_to_be_clickable((By.XPATH, COLLOR_BUTTON_BLUE if product_xpath == WIDGET_PRODUCT_1 else COLLOR_BUTTON_PURPLE))\n            )\n            select_color.click()\n    \n            add_cart = WebDriverWait(driver, 10).until(\n                EC.element_to_be_clickable((By.XPATH, ADD_CART_BUTTON))\n            )\n            add_cart.click()\n    \n            wait_added = WebDriverWait(driver, 100).until(\n                EC.element_to_be_clickable((By.XPATH, ADDED_ELEMENT))\n            )\n            assert wait_added is not None, \"Element not found\"\n    \n            driver.back()\n    \n        click_cart = WebDriverWait(driver, 10).until(\n            EC.element_to_be_clickable((By.XPATH, CART_BUTTON))\n        )\n        click_cart.click()\n    \n    \n>       proceed_checkout = WebDriverWait(driver, 10).until(\n            EC.element_to_be_clickable((By.XPATH, CHECKOUT_BUTTON))\n        )\n\ntest.py:116: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"d485751e4639dfee0872f81c70f3130d\")>\nmethod = <function element_to_be_clickable.<locals>._predicate at 0x104f45080>, message = ''\n\n    def until(self, method, message: str = \"\"):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            time.sleep(self._poll)\n            if time.monotonic() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       0   chromedriver                        0x00000001048bad68 chromedriver + 4337000\nE       1   chromedriver                        0x00000001048b2de4 chromedriver + 4304356\nE       2   chromedriver                        0x00000001044dfa5c chromedriver + 293468\nE       3   chromedriver                        0x0000000104524d50 chromedriver + 576848\nE       4   chromedriver                        0x000000010455f908 chromedriver + 817416\nE       5   chromedriver                        0x0000000104518a5c chromedriver + 526940\nE       6   chromedriver                        0x0000000104519908 chromedriver + 530696\nE       7   chromedriver                        0x0000000104880db4 chromedriver + 4099508\nE       8   chromedriver                        0x0000000104885270 chromedriver + 4117104\nE       9   chromedriver                        0x000000010488b4fc chromedriver + 4142332\nE       10  chromedriver                        0x0000000104885d70 chromedriver + 4119920\nE       11  chromedriver                        0x000000010485da44 chromedriver + 3955268\nE       12  chromedriver                        0x00000001048a2a18 chromedriver + 4237848\nE       13  chromedriver                        0x00000001048a2b94 chromedriver + 4238228\nE       14  chromedriver                        0x00000001048b2a5c chromedriver + 4303452\nE       15  libsystem_pthread.dylib             0x000000018f06b034 _pthread_start + 136\nE       16  libsystem_pthread.dylib             0x000000018f065e3c thread_start + 8\n\n../test/venv/lib/python3.11/site-packages/selenium/webdriver/support/wait.py:95: TimeoutException"}, "steps": [{"name": "Open the test", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n0   chromedriver                        0x00000001048bad68 chromedriver + 4337000\n1   chromedriver                        0x00000001048b2de4 chromedriver + 4304356\n2   chromedriver                        0x00000001044dfa5c chromedriver + 293468\n3   chromedriver                        0x0000000104524d50 chromedriver + 576848\n4   chromedriver                        0x000000010455f908 chromedriver + 817416\n5   chromedriver                        0x0000000104518a5c chromedriver + 526940\n6   chromedriver                        0x0000000104519908 chromedriver + 530696\n7   chromedriver                        0x0000000104880db4 chromedriver + 4099508\n8   chromedriver                        0x0000000104885270 chromedriver + 4117104\n9   chromedriver                        0x000000010488b4fc chromedriver + 4142332\n10  chromedriver                        0x0000000104885d70 chromedriver + 4119920\n11  chromedriver                        0x000000010485da44 chromedriver + 3955268\n12  chromedriver                        0x00000001048a2a18 chromedriver + 4237848\n13  chromedriver                        0x00000001048a2b94 chromedriver + 4238228\n14  chromedriver                        0x00000001048b2a5c chromedriver + 4303452\n15  libsystem_pthread.dylib             0x000000018f06b034 _pthread_start + 136\n16  libsystem_pthread.dylib             0x000000018f065e3c thread_start + 8\n\n", "trace": "  File \"/Users/nugrahpratama/Developer/test/venv/lib/python3.11/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/Users/nugrahpratama/Developer/selenium/test.py\", line 116, in testtest\n    proceed_checkout = WebDriverWait(driver, 10).until(\n                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/Users/nugrahpratama/Developer/test/venv/lib/python3.11/site-packages/selenium/webdriver/support/wait.py\", line 95, in until\n    raise TimeoutException(message, screen, stacktrace)\n"}, "parameters": [{"name": "driver", "value": "<selenium.webdriver.chrome.webdriver.WebDriver (session=\"d485751e4639dfee0872f81c70f3130d\")>"}], "start": 1697351877581, "stop": 1697351918145}], "start": 1697351877581, "stop": 1697351918149, "uuid": "fe192c19-ba6d-4cba-ac54-5339ad5142cb", "historyId": "d55900f77b8371822f71b6e5e8a31f61", "testCaseId": "d55900f77b8371822f71b6e5e8a31f61", "fullName": "test#testtest", "labels": [{"name": "suite", "value": "test"}, {"name": "host", "value": "192.168.1.16"}, {"name": "thread", "value": "7158-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test"}]}